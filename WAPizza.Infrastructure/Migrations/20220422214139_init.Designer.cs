// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WAPizza.Infrastructure;

namespace WAPizza.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20220422214139_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.16")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WAPizza.Core.Domain.AdditionalIngredient", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("AdditionalIngredients");
                });

            modelBuilder.Entity("WAPizza.Core.Domain.Links.MenuItemAdditionalIngredientLink", b =>
                {
                    b.Property<long>("MenuItemId")
                        .HasColumnType("bigint");

                    b.Property<long>("AdditionalIngredientId")
                        .HasColumnType("bigint");

                    b.HasKey("MenuItemId", "AdditionalIngredientId");

                    b.HasIndex("AdditionalIngredientId");

                    b.ToTable("MenuItemAdditionalIngredientLinks");
                });

            modelBuilder.Entity("WAPizza.Core.Domain.Links.MenuItemModificatorLink", b =>
                {
                    b.Property<long>("MenuItemId")
                        .HasColumnType("bigint");

                    b.Property<long>("ModificatorId")
                        .HasColumnType("bigint");

                    b.HasKey("MenuItemId", "ModificatorId");

                    b.HasIndex("ModificatorId");

                    b.ToTable("MenuItemModificatorLinks");
                });

            modelBuilder.Entity("WAPizza.Core.Domain.MenuItem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("MenuSectionId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Weight")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("MenuSectionId");

                    b.ToTable("MenuItems");
                });

            modelBuilder.Entity("WAPizza.Core.Domain.MenuSection", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("MenuSections");
                });

            modelBuilder.Entity("WAPizza.Core.Domain.Modificator", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Modificators");
                });

            modelBuilder.Entity("WAPizza.Core.Domain.Picture", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FilePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("MenuItemId")
                        .HasColumnType("bigint");

                    b.Property<string>("RelativePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("MenuItemId");

                    b.ToTable("Pictures");
                });

            modelBuilder.Entity("WAPizza.Core.Domain.Links.MenuItemAdditionalIngredientLink", b =>
                {
                    b.HasOne("WAPizza.Core.Domain.AdditionalIngredient", "AdditionalIngredient")
                        .WithMany("MenuItems")
                        .HasForeignKey("AdditionalIngredientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WAPizza.Core.Domain.MenuItem", "MenuItem")
                        .WithMany("AdditionalIngredients")
                        .HasForeignKey("MenuItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AdditionalIngredient");

                    b.Navigation("MenuItem");
                });

            modelBuilder.Entity("WAPizza.Core.Domain.Links.MenuItemModificatorLink", b =>
                {
                    b.HasOne("WAPizza.Core.Domain.MenuItem", "MenuItem")
                        .WithMany("Modificators")
                        .HasForeignKey("MenuItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WAPizza.Core.Domain.Modificator", "Modificator")
                        .WithMany("MenuItems")
                        .HasForeignKey("ModificatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MenuItem");

                    b.Navigation("Modificator");
                });

            modelBuilder.Entity("WAPizza.Core.Domain.MenuItem", b =>
                {
                    b.HasOne("WAPizza.Core.Domain.MenuSection", "MenuSection")
                        .WithMany("MenuItems")
                        .HasForeignKey("MenuSectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MenuSection");
                });

            modelBuilder.Entity("WAPizza.Core.Domain.Picture", b =>
                {
                    b.HasOne("WAPizza.Core.Domain.MenuItem", "MenuItem")
                        .WithMany("Pictures")
                        .HasForeignKey("MenuItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MenuItem");
                });

            modelBuilder.Entity("WAPizza.Core.Domain.AdditionalIngredient", b =>
                {
                    b.Navigation("MenuItems");
                });

            modelBuilder.Entity("WAPizza.Core.Domain.MenuItem", b =>
                {
                    b.Navigation("AdditionalIngredients");

                    b.Navigation("Modificators");

                    b.Navigation("Pictures");
                });

            modelBuilder.Entity("WAPizza.Core.Domain.MenuSection", b =>
                {
                    b.Navigation("MenuItems");
                });

            modelBuilder.Entity("WAPizza.Core.Domain.Modificator", b =>
                {
                    b.Navigation("MenuItems");
                });
#pragma warning restore 612, 618
        }
    }
}
